@page "/minesweeper"
@using blazor_games.Minesweeper

<h1>Minesweeper</h1>

<div style="padding-bottom: 1rem">
    <button class="btn btn-secondary" @onclick="() => StartGame(Size.Small)">Small</button>
    <button class="btn btn-secondary" @onclick="() => StartGame(Size.Medium)">Medium</button>
    <button class="btn btn-secondary" @onclick="() => StartGame(Size.Large)">Large</button>
</div>

@if (_status != Status.NotStarted) {
    <div style="display: flex; flex-direction: column; align-items: flex-start;">
        @for (var row = 0; row < _board.Tiles.GetLength(0); row++)
        {
            <div class="btn-group">
                @for (var col = 0; col < _board.Tiles.GetLength(1); col++)
                {
                    var tile = _board.Tiles[row, col];
                    @if (tile.IsClicked)
                    {
                        @if (tile.IsMine)
                        {
                            <button class="btn btn-default tile tile-clicked tile-clicked-mine">*</button>
                        }
                        else
                        {
                            <button class="btn btn-default tile tile-clicked tile-clicked-empty">@(tile.NumNeighbours == 0 ? "" : tile.NumNeighbours)</button>
                        }
                    }
                    else
                    {
                        <button class="btn btn-default tile tile-unclicked" @onclick="() => ClickTile(tile)"></button>
                    }
                }
            </div>
        }
    </div>

    @if (_status == Status.Lost)
    {
        <h1>You lost :(</h1>
    } else if (_status == Status.Won)
    {
        <h1>You Won!</h1>
    }
}


@code {
    private Board _board { get; set; }
    private Status _status { get; set; } = Status.NotStarted;

    private void StartGame(Size size)
    {
        _board = Board.Build(size);
        _status = Status.Started;
    }

    private void ClickTile(Tile tile)
    {
        tile.Click();
        if (tile.IsMine)
        {
            _status = Status.Lost;
            _board.ClickAllTiles();
            return;
        }
        
        if (tile.NumNeighbours == 0)
        {
            _board.RevealAdjacentTiles(tile);
        }
        
        if (_board.OnlyMinesRemaining())
        {
            _status = Status.Won;
            _board.ClickAllTiles();
        } 
    }
}
